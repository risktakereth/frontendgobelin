.wallet { 
  display: flex;
  padding: 3rem;
  flex-direction: row-reverse;
}

.center {
  position: relative;
  padding: 1.5rem 0rem 3rem 0rem;
  width: 100%;
  margin: 0 auto;
}

.form > * + * {
  display: flex;
  flex-direction: column;
  margin-top: 2rem;
}

.form button {
  display: inline-flex;
  flex-direction: row;
  align-items: center;
  gap: 1rem;
  color: rgb(var(--on-accent-rgb));
  background-color: rgb(var(--accent-rgb));
  border: none;
  border-radius: var(--border-radius);
  padding: 1rem;
  font-size: 14px;
  font-weight: 600;
}

.form button:hover {
  cursor: pointer;
  background-color: rgb(var(--darker-accent-rgb));
}

.form button span {
  white-space: nowrap;
}

.form button svg {
  width: 1rem;
  fill: currentColor;
}

.field {
  display: block;
}

.field span {
  font-weight: 600;
  font-size: 14px;
}

.field input {
  display: block;
  width: 100%;
  padding: 1rem;
  margin-top: .5rem;
  border: 1px solid rgb(var(--tertiary-background-rgb));
  border-radius: var(--border-radius);
  background: rgb(var(--secondary-background-rgb));
  color: rgb(var(--hint-rgb));
  font-size: 1rem;
  line-height: 1.5;
}

.loading {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;
  gap: 1rem;
}

.loading svg {
  width: 2rem;
  height: 2rem;
  color: rgb(var(--accent-rgb));
  animation: spin 2s linear infinite;
}

@keyframes spin {
  100% {
    transform: rotate(360deg);
  }
}

.success {
  cursor: pointer;
  display: flex;
  flex-direction: row;
  align-items: flex-start;
  justify-content: center;
  gap: 1rem;
  background: rgb(var(--secondary-background-rgb));
  border: 1px solid rgb(var(--tertiary-background-rgb));
  border-radius: var(--border-radius);
  padding: 1rem;
}

.success > div {
  display: flex;
  flex-direction: column;
  gap: .5rem;
}

.success code {
  font-family: var(--font-mono);
  color: rgb(var(--secondary-foreground-rgb));
}

.success svg {
  width: 2rem;
  height: 2rem;
  color: rgb(var(--accent-rgb));
}

.success:hover {
  background-color: rgb(var(--hover-background-rgb));
}

.success:hover code {
  color: rgb(var(--accent-rgb));
}

#nft-display {
  margin-top: 5em;
  padding: 1em;
  display: grid;
  gap: 16px;
  
  max-width: 1900px;
  margin: 0 auto;
}

.container {
  position: relative; /* Assurez-vous que le conteneur a une position relative */
}

.blackScreen {
  position: fixed; /* Utilisez fixed pour couvrir tout l'écran */
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 1); /* Couleur noire avec transparence */
  z-index: 2222; /* Un index de z élevé pour le placer au-dessus des autres éléments */
  display: flex; /* Pour centrer le contenu si nécessaire */
  justify-content: center; /* Centre horizontalement */
  align-items: center; /* Centre verticalement */
  opacity: 1; /* Commence avec une opacité de 1 */
  transition: opacity 1s ease; /* Durée de la transition pour la disparition */
}

.redScreen {
  position: fixed; /* Utilisez fixed pour couvrir tout l'écran */
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgb(0, 0, 0); /* Couleur noire avec transparence */
  z-index: 3333; /* Un index de z élevé pour le placer au-dessus des autres éléments */
  display: flex; /* Pour centrer le contenu si nécessaire */
  justify-content: center; /* Centre horizontalement */
  align-items: center; /* Centre verticalement */
  opacity: 1; /* Commence avec une opacité de 1 */
  transition: opacity 1s ease; /* Durée de la transition pour la disparition */
}

.fadeOut {
  opacity: 0; /* Opacité à 0 pour la disparition */
  transition: opacity 1s ease; /* Durée de la transition pour la disparition */
}

.fadeOut2 {
  opacity: 0;
  transition: opacity 2s ease;
}

.textContainer {
  position: relative; /* Pour que le texte apparaisse au-dessus de l'écran noir */
  z-index: 4444; /* S'assure que le texte soit au-dessus de l'écran noir */
  text-align: center; /* Centrer le texte */
  transition: opacity 1s ease; /* Durée de la transition pour la disparition */
}

.fadeIn {
  opacity: 1;
  transition: opacity 0.5s ease-in;
}

.hiddenImage {
  opacity: 0;
  transition: opacity 0.5s ease-in;
}